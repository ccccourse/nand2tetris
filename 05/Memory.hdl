// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    // load is clocked, since it's came from CPU
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // if address[14] == 0, then check load for ram16k
    Equal(a=address[14], b=false, out=chooseRam);
    And(a=chooseRam, b=load, out=loadram);

    // if address[13] == 0 and address[14] == 1, then load screen
    Equal(a=address[13], b=false, out=iszero13);
    Equal(a=address[14], b=true, out=isone14);
    And(a=iszero13, b=isone14, out=chooseScreen);
    And(a=chooseScreen, b=load, out=loadscreen);

    RAM16K(in=in, load=loadram, address=address[0..13], out=outram);
    Screen(in=in, load=loadscreen, address=address[0..12], out=outscreen);
    Keyboard(out=outKBD);

    // set output
    // if address in ram range, then out=a
    Mux16(a=false, b=outram, sel=chooseRam, out=outa);
    Mux16(a=false, b=outscreen, sel=chooseScreen, out=outb);
    Or16(a=outa, b=outb, out=outab);
    Or16(a=outab, b=outKBD, out=out);
}
